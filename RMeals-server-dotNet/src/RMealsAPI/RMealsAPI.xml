<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RMealsAPI</name>
    </assembly>
    <members>
        <member name="M:RMealsAPI.Code.Extensions.ControllerBaseExtensions.Created(Microsoft.AspNetCore.Mvc.ControllerBase,System.Object,System.Object)">
            <summary>
            Returns a HTTP 201 response, where the new object's URI is auto guessed (to the current request path the ID is appended).
            </summary>
            <param name="controller"></param>
            <param name="id">The ID of the newly created object</param>
            <param name="value">The value we do wan't to return in the BODY (if omitted, ID is used)</param>
            <returns></returns>
        </member>
        <member name="T:RMealsAPI.Code.Filters.AuthorizeSelfOrRole">
            <summary>
            Originally impl. as TypeFilter due DI, but later DB call was dropped...
            </summary>
        </member>
        <member name="M:RMealsAPI.Features.AuthenticationController.Login(System.String,System.String)">
            <summary>
            NOTE: FromForm parameters not supported with OAPI 3.0 - https://github.com/RicoSuter/NSwag/issues/2491
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:RMealsAPI.Features.AuthenticationController.Register(System.String,System.String)">
            <summary>
            NOTE: FromForm parameters not supported with OAPI 3.0 - https://github.com/RicoSuter/NSwag/issues/2491
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:RMealsAPI.Features.Meals.MealsController.CreateMeal(System.Int64,RMealsAPI.Features.Meals.MealDto)">
            <summary>
            Creates a new meal entry for the given user
            </summary>
            <param name="userId"></param>
            <param name="mealId"></param>
            <param name="mealDto"></param>
            <returns>Unique ID of the given UserMeal entry; The Location header will also be set and the URL to access the newly created item will be set there.</returns>
        </member>
        <member name="M:RMealsAPI.Features.Meals.MealsController.GetMeals(System.Int64,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Gets a list of mails (with possible filtering).
            NOTE: originally would have used OData (flexible filtering and KENDO has support for creating queries in a structured fashion), but within .NET Core 3 OData is not functional yet (see: https://github.com/OData/WebApi/issues/1748).
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMealsAPI.Features.Meals.UsersController.GetProfile(System.Int32)">
            <summary>
            Get profile of given user
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMealsAPI.Features.Meals.UsersController.UpdateProfile(System.Int64,RMealsAPI.Features.Users.UserProfileDto)">
            <summary>
            Update profile of given user
            </summary>
            <param name="userId"></param>
            <param name="userProfileDto"></param>
            <returns></returns>
        </member>
        <member name="M:RMealsAPI.Features.Meals.UsersController.GetUsers(System.Nullable{System.Int64})">
            <summary>
            List all users (or just a single one)
            </summary>
            <param name="userId">If this value is passed as a query-string, single user detail will be returned...</param>
            <returns></returns>
        </member>
        <member name="M:RMealsAPI.Features.Meals.UsersController.GetRolesForUser(System.Int64)">
            <summary>
            Get's a list of user roles...
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMealsAPI.Features.Meals.UsersController.SetRolesForUser(System.Int64,System.String[])">
            <summary>
            Set's new roles for a given user/
            </summary>
            <param name="userId"></param>
            <param name="newRoles"></param>
            <returns></returns>
        </member>
        <member name="M:RMealsAPI.Program.Main(System.String[])">
            <summary>
            https://github.com/aspnet/AspNetCore/blob/master/src/Hosting/Abstractions/src/WebHostDefaults.cs
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:RMealsAPI.Program.CreateHostBuilder(System.String[])">
            <summary>
            --environment "Test" vs .UseEnvironment("Test")
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
    </members>
</doc>
